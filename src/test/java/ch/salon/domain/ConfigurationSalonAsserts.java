package ch.salon.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ConfigurationSalonAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConfigurationSalonAllPropertiesEquals(ConfigurationSalon expected, ConfigurationSalon actual) {
        assertConfigurationSalonAutoGeneratedPropertiesEquals(expected, actual);
        assertConfigurationSalonAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConfigurationSalonAllUpdatablePropertiesEquals(ConfigurationSalon expected, ConfigurationSalon actual) {
        assertConfigurationSalonUpdatableFieldsEquals(expected, actual);
        assertConfigurationSalonUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConfigurationSalonAutoGeneratedPropertiesEquals(ConfigurationSalon expected, ConfigurationSalon actual) {
        assertThat(expected)
            .as("Verify ConfigurationSalon auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConfigurationSalonUpdatableFieldsEquals(ConfigurationSalon expected, ConfigurationSalon actual) {
        assertThat(expected)
            .as("Verify ConfigurationSalon relevant properties")
            .satisfies(e -> assertThat(e.getPriceMeal1()).as("check priceMeal1").isEqualTo(actual.getPriceMeal1()))
            .satisfies(e -> assertThat(e.getPriceMeal2()).as("check priceMeal2").isEqualTo(actual.getPriceMeal2()))
            .satisfies(e -> assertThat(e.getPriceMeal3()).as("check priceMeal3").isEqualTo(actual.getPriceMeal3()))
            .satisfies(e -> assertThat(e.getPriceConference()).as("check priceConference").isEqualTo(actual.getPriceConference()))
            .satisfies(e -> assertThat(e.getPriceSharingStand()).as("check priceSharingStand").isEqualTo(actual.getPriceSharingStand()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConfigurationSalonUpdatableRelationshipsEquals(ConfigurationSalon expected, ConfigurationSalon actual) {
        assertThat(expected)
            .as("Verify ConfigurationSalon relationships")
            .satisfies(e -> assertThat(e.getSalon()).as("check salon").isEqualTo(actual.getSalon()));
    }
}
