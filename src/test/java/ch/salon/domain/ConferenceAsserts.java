package ch.salon.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ConferenceAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConferenceAllPropertiesEquals(Conference expected, Conference actual) {
        assertConferenceAutoGeneratedPropertiesEquals(expected, actual);
        assertConferenceAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConferenceAllUpdatablePropertiesEquals(Conference expected, Conference actual) {
        assertConferenceUpdatableFieldsEquals(expected, actual);
        assertConferenceUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConferenceAutoGeneratedPropertiesEquals(Conference expected, Conference actual) {
        assertThat(expected)
            .as("Verify Conference auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConferenceUpdatableFieldsEquals(Conference expected, Conference actual) {
        assertThat(expected)
            .as("Verify Conference relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConferenceUpdatableRelationshipsEquals(Conference expected, Conference actual) {
        assertThat(expected)
            .as("Verify Conference relationships")
            .satisfies(e -> assertThat(e.getSalon()).as("check salon").isEqualTo(actual.getSalon()))
            .satisfies(e -> assertThat(e.getExponent()).as("check exponent").isEqualTo(actual.getExponent()));
    }
}
