package ch.salon.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SalonAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSalonAllPropertiesEquals(Salon expected, Salon actual) {
        assertSalonAutoGeneratedPropertiesEquals(expected, actual);
        assertSalonAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSalonAllUpdatablePropertiesEquals(Salon expected, Salon actual) {
        assertSalonUpdatableFieldsEquals(expected, actual);
        assertSalonUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSalonAutoGeneratedPropertiesEquals(Salon expected, Salon actual) {
        assertThat(expected)
            .as("Verify Salon auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSalonUpdatableFieldsEquals(Salon expected, Salon actual) {
        assertThat(expected)
            .as("Verify Salon relevant properties")
            .satisfies(e -> assertThat(e.getPlace()).as("check place").isEqualTo(actual.getPlace()))
            .satisfies(e -> assertThat(e.getStartingDate()).as("check startingDate").isEqualTo(actual.getStartingDate()))
            .satisfies(e -> assertThat(e.getEndingDate()).as("check endingDate").isEqualTo(actual.getEndingDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSalonUpdatableRelationshipsEquals(Salon expected, Salon actual) {}
}
