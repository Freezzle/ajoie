package ch.salon.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PriceStandSalonAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPriceStandSalonAllPropertiesEquals(PriceStandSalon expected, PriceStandSalon actual) {
        assertPriceStandSalonAutoGeneratedPropertiesEquals(expected, actual);
        assertPriceStandSalonAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPriceStandSalonAllUpdatablePropertiesEquals(PriceStandSalon expected, PriceStandSalon actual) {
        assertPriceStandSalonUpdatableFieldsEquals(expected, actual);
        assertPriceStandSalonUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPriceStandSalonAutoGeneratedPropertiesEquals(PriceStandSalon expected, PriceStandSalon actual) {
        assertThat(expected)
            .as("Verify PriceStandSalon auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPriceStandSalonUpdatableFieldsEquals(PriceStandSalon expected, PriceStandSalon actual) {
        assertThat(expected)
            .as("Verify PriceStandSalon relevant properties")
            .satisfies(e -> assertThat(e.getPrice()).as("check price").isEqualTo(actual.getPrice()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPriceStandSalonUpdatableRelationshipsEquals(PriceStandSalon expected, PriceStandSalon actual) {
        assertThat(expected)
            .as("Verify PriceStandSalon relationships")
            .satisfies(e -> assertThat(e.getDimension()).as("check dimension").isEqualTo(actual.getDimension()))
            .satisfies(e -> assertThat(e.getSalon()).as("check salon").isEqualTo(actual.getSalon()));
    }
}
