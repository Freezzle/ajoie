package ch.salon.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BillingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBillingAllPropertiesEquals(Billing expected, Billing actual) {
        assertBillingAutoGeneratedPropertiesEquals(expected, actual);
        assertBillingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBillingAllUpdatablePropertiesEquals(Billing expected, Billing actual) {
        assertBillingUpdatableFieldsEquals(expected, actual);
        assertBillingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBillingAutoGeneratedPropertiesEquals(Billing expected, Billing actual) {
        assertThat(expected)
            .as("Verify Billing auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBillingUpdatableFieldsEquals(Billing expected, Billing actual) {
        assertThat(expected)
            .as("Verify Billing relevant properties")
            .satisfies(e -> assertThat(e.getAcceptedContract()).as("check acceptedContract").isEqualTo(actual.getAcceptedContract()))
            .satisfies(e -> assertThat(e.getNeedArrangment()).as("check needArrangment").isEqualTo(actual.getNeedArrangment()))
            .satisfies(e -> assertThat(e.getIsClosed()).as("check isClosed").isEqualTo(actual.getIsClosed()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBillingUpdatableRelationshipsEquals(Billing expected, Billing actual) {
        assertThat(expected)
            .as("Verify Billing relationships")
            .satisfies(e -> assertThat(e.getStand()).as("check stand").isEqualTo(actual.getStand()));
    }
}
